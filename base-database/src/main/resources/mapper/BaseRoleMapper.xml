<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.base.dao.BaseRoleMapper">
  <resultMap id="BaseResultMap" type="com.base.entity.BaseRole">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_descripse" jdbcType="VARCHAR" property="roleDescripse" />
    <result column="role_create_time" jdbcType="TIMESTAMP" property="roleCreateTime" />
    <result column="role_insert_time" jdbcType="TIMESTAMP" property="roleInsertTime" />
    <result column="role_valid" jdbcType="SMALLINT" property="roleValid" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_descripse, role_create_time, role_insert_time, role_valid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.base.entity.BaseRole">
    insert into base_role (role_id, role_name, role_descripse, 
      role_create_time, role_insert_time, role_valid
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDescripse,jdbcType=VARCHAR}, 
      #{roleCreateTime,jdbcType=TIMESTAMP}, #{roleInsertTime,jdbcType=TIMESTAMP}, #{roleValid,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.base.entity.BaseRole">
    insert into base_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDescripse != null">
        role_descripse,
      </if>
      <if test="roleCreateTime != null">
        role_create_time,
      </if>
      <if test="roleInsertTime != null">
        role_insert_time,
      </if>
      <if test="roleValid != null">
        role_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescripse != null">
        #{roleDescripse,jdbcType=VARCHAR},
      </if>
      <if test="roleCreateTime != null">
        #{roleCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleInsertTime != null">
        #{roleInsertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleValid != null">
        #{roleValid,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.base.entity.BaseRole">
    update base_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescripse != null">
        role_descripse = #{roleDescripse,jdbcType=VARCHAR},
      </if>
      <if test="roleCreateTime != null">
        role_create_time = #{roleCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleInsertTime != null">
        role_insert_time = #{roleInsertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleValid != null">
        role_valid = #{roleValid,jdbcType=SMALLINT},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.base.entity.BaseRole">
    update base_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_descripse = #{roleDescripse,jdbcType=VARCHAR},
      role_create_time = #{roleCreateTime,jdbcType=TIMESTAMP},
      role_insert_time = #{roleInsertTime,jdbcType=TIMESTAMP},
      role_valid = #{roleValid,jdbcType=SMALLINT}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>