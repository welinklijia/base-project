<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
   <properties resource="jdbc.properties"/>
  <!-- 
   <settings>
   		<setting name="" value=""/>
   </settings> -->
   <typeAliases>
   		<!-- 指定包下的对象别名，默认使用类名首字母小写作为别名 -->
		<package name="com.mybatis.study.entity"/>
	</typeAliases>
  <environments default="produce">
  <!-- 
  environments标签下可以配置多个environment,通过default属性与id属性匹配.
  mybatis配置多个数据源,
    通过environments的default属性与environment的id属性匹配获取mybatis使用的数据源 -->
    <environment id="development">
      <transactionManager type="JDBC"/>
      <dataSource type="POOLED">
        <property name="driver" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
      </dataSource>
    </environment>
    <environment id="produce">
    	<transactionManager type="JDBC"></transactionManager>
    	<dataSource type="com.mybatis.study.external.dataSource.DruidDataSourceFactory">
	   	   <!--  <property name="driver" value="${mysql.driver}"/>-->
	       <property name="url" value="${mysql.url}"/>
	       <property name="username" value="${mysql.username}"/>
	       <property name="password" value="${mysql.password}"/>
	       <!-- 配置初始化大小、最小、最大 -->
           <property name="initialSize" value="1" />
           <property name="minIdle" value="1" />
           <property name="maxActive" value="20" />

           <!-- 配置获取连接等待超时的时间 -->
           <property name="maxWait" value="60000" />

           <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
           <property name="timeBetweenEvictionRunsMillis" value="60000" />

           <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
           <property name="minEvictableIdleTimeMillis" value="300000" />

           <property name="validationQuery" value="SELECT 'x'" />
           <property name="testWhileIdle" value="true" />
           <property name="testOnBorrow" value="false" />
           <property name="testOnReturn" value="false" />

           <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
           <property name="filters" value="stat" />
    	</dataSource>
    </environment>
  </environments>
  <mappers>
     <!-- 
     	mapper配置接口与mapper.xml文件的映射，有如下几种方式配置
     	1.第一种方式：通过resource指定
     	<mapper resource="mapper/UserDaoMapper.xml"/>
     	2.通过class指定接口，进而将接口与对应的xml文件形成映射关系
                      不过，使用这种方式必须保证 接口与mapper文件同名(不区分大小写)， 
                       我这儿接口是UserDao,那么意味着mapper文件为UserDao.xml 
        <mapper class="com.dy.dao.UserDao"/>
        3.直接指定包，自动扫描，与方法二同理 
        <package name="com.dy.dao"/>
        4.第四种方式：通过url指定mapper文件位置
      	 <mapper url="file://........"/>
      -->
    <mapper resource="mapper/UserDaoMapper.xml"/>
    <mapper resource="mapper/RoleDaoMapper.xml"/>
    <mapper resource="mapper/ResourceDaoMapper.xml"/>
  </mappers>
  
</configuration>